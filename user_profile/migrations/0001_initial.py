# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-01-04 14:34
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0010_auto_20171231_1136'),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Sap_Id', models.CharField(max_length=50)),
                ('department', models.CharField(max_length=50)),
                ('photo', models.FileField(blank=True, upload_to='')),
                ('bio', models.CharField(max_length=200)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('mobileNo', models.CharField(max_length=50)),
                ('year', models.CharField(choices=[('FE', 'First Year'), ('SE', 'Second Year'), ('TE', 'Third Year'), ('BE', 'Final Year')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BeProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProjName', models.CharField(max_length=50)),
                ('ProjURL', models.TextField(validators=[django.core.validators.URLValidator()])),
                ('ProjDesc', models.CharField(blank=True, max_length=500)),
                ('isVerified', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BE_projects', to=settings.AUTH_USER_MODEL)),
                ('teammates', models.ManyToManyField(blank=True, related_name='BE_teammate', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OrganisationName', models.CharField(max_length=50)),
                ('YourPosition', models.CharField(max_length=50)),
                ('Loc', models.CharField(blank=True, max_length=50)),
                ('dateFrom', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date')),
                ('dateTo', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date')),
                ('Desc', models.CharField(blank=True, max_length=500)),
                ('Certificate', models.FileField(blank=True, upload_to='')),
                ('isVerified', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hackathon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CompetitionName', models.CharField(max_length=50)),
                ('Date', models.DateField()),
                ('Desc', models.CharField(max_length=500)),
                ('URL', models.TextField(validators=[django.core.validators.URLValidator()])),
                ('isVerified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Internship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, max_length=50)),
                ('Position', models.CharField(blank=True, max_length=50)),
                ('Loc', models.CharField(blank=True, max_length=50)),
                ('From', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date')),
                ('To', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date')),
                ('desc', models.CharField(blank=True, max_length=500)),
                ('Certificate', models.FileField(blank=True, upload_to='')),
                ('isVerified', models.BooleanField(default=False)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProjName', models.CharField(max_length=50)),
                ('ProjURL', models.TextField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('ProjDesc', models.CharField(blank=True, max_length=500)),
                ('isVerified', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResearchPaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=50)),
                ('Publication', models.CharField(max_length=100)),
                ('DateOfPublication', models.DateField(blank=True, default=datetime.date.today, verbose_name='Date')),
                ('Desc', models.CharField(blank=True, max_length=500)),
                ('LinkToPaper', models.TextField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('PaperId', models.CharField(blank=True, max_length=50)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=50)),
            ],
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='hackathon',
            field=models.ManyToManyField(blank=True, to='user_profile.Hackathon'),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='skills',
            field=models.ManyToManyField(blank=True, to='user_profile.Skill'),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
